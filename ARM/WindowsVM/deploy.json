{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "prefix": {
      "type": "string",
      "metadata": {
        "description": "The prefix like PAZKV - Production Azure Stack KV"
      },
      "defaultValue": "PAZKV"
    },
    "projectName": {
      "type": "string",
      "metadata": {
        "description": "The name of the project"
      },
      "defaultValue": "StdSrv"
    },
    "windowsImagePublisher": {
      "type": "string",
      "metadata": {
        "description": "The Publisher of Windows Image"
      },
      "defaultValue": "MicrosoftWindowsServer"
    },
    "windowsImageOffer": {
      "type": "string",
      "metadata": {
        "description": "The offer of Windows Image"
      },
      "defaultValue": "WindowsServer"
    },
    "windowsImageSKU": {
      "type": "string",
      "metadata": {
        "description": "The SKU Name of Windows Image"
      },
      "defaultValue": "2016-Datacenter"
    },
    "windowsImageVersion": {
      "type": "string",
      "metadata": {
        "description": "The Version of Windows Image"
      },
      "defaultValue": "latest"
    },
    "dataDiskSize": {
      "type": "int",
      "metadata": {
        "description": "The Size of VM data disk. Default 10 GB"
      },
      "defaultValue": 50
    },
    "storageAccountType": {
      "type": "string",
      "metadata": {
        "description": "The type of the Storage Account created"
      },
      "defaultValue": "Standard_LRS"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VMs and Domain"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VMs and Domain"
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "The size of the AD VMs Created"
      },
      "defaultValue": "Standard_A2"
    },
    "subnetResourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource id to the subnet"
      }
    },
    "rdpNATRuleID": {
      "type": "string",
      "metadata": {
        "description": "The resource id for the RDP NAT rule"
      }
    },
    "publicIPAddressID": {
      "type": "string",
      "metadata": {
        "description": "The ID of the public IP address"
      }
    }
  },
  "variables": {
    "vmName": "[concat(parameters('projectName'),'-',parameters('prefix'))]",
    "storageAccount": "[tolower(concat(parameters('projectName'),parameters('prefix'),'sa'))]",
    "nicName": "[concat(variables('vmName'),'-NIC')]",
    "vmContainerName": "vhds"

  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccount')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    },
    {
      "name": "[variables('nicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-05-01-preview",
      "dependsOn": [
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[parameters('subnetResourceId')]"
              },
              "publicIpAddress": {
                "id": "[parameters('publicIPAddressID')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts',variables('storageAccount'))]",
        "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": "true",
            "timeZone": "Central Europe Standard Time"
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('windowsImagePublisher')]",
            "offer": "[parameters('windowsImageOffer')]",
            "sku": "[parameters('windowsImageSKU')]",
            "version": "[parameters('windowsImageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccount')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmContainerName'),'/', variables('vmName'), '0','-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "vhd": {
                "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccount')),providers('Microsoft.Storage','storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmContainerName'),'/',variables('vmName'),'0','-data-1.vhd')]"
              },
              "name": "[concat(variables('vmName'), '0','data-1.vhd')]",
              "caching": "None",
              "createOption": "Empty",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 0
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    }
  ],
  "outputs": {
  }
}